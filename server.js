import express from "express";
import cors from "cors";
import dotenv from "dotenv";
import session from "express-session";
import path from "path";
import { fileURLToPath } from "url";
import cron from "node-cron";
import { db } from "./db/index.js";
import { orders } from "./db/schema.js";
import { and, eq, lt } from "drizzle-orm";
import usersRouter from "./routes/users.js";
import productsRouter from "./routes/products.js";
import categoriesRouter from "./routes/categories.js";
import brandsRouter from "./routes/brands.js";
import ordersRouter from "./routes/orders.js";
import orderItemsRouter from "./routes/orderItems.js";
import favoritesRouter from "./routes/favorites.js";
import reviewsRouter from "./routes/reviews.js";
import adminRouter from "./routes/admin.js";
import sizesRouter from "./routes/sizes.js";

dotenv.config();

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è CORS
app.use(
  cors({
    origin: process.env.FRONT_END_URL,
    methods: ["GET", "POST", "PUT", "PATCH", "DELETE"],
    allowedHeaders: ["Content-Type", "Authorization"],
  })
);

app.use(express.json());
app.use(
  session({
    secret: process.env.SESSION_SECRET || "your-secret-key",
    resave: false,
    saveUninitialized: true,
    cookie: { secure: false }, // –£ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—ñ –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å secure: true –∑ HTTPS
  })
);

// –°—Ç–∞—Ç–∏—á–Ω—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
app.use("/images", express.static(path.join(__dirname, "public", "images")));

// –ö–æ—Ä–µ–Ω–µ–≤–∏–π –º–∞—Ä—à—Ä—É—Ç —Ç–∞ health-check
app.get("/", (req, res) => {
  res.send("üü¢ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î!");
});

app.get("/api/health", (req, res) => {
  res.json({ status: "OK", timestamp: Date.now() });
});

// –ú–æ–Ω—Ç—É–≤–∞–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç—ñ–≤
app.use(usersRouter);
app.use(productsRouter);
app.use(categoriesRouter);
app.use(brandsRouter);
app.use(ordersRouter);
app.use(orderItemsRouter);
app.use(favoritesRouter);
app.use(reviewsRouter);
app.use(sizesRouter);
app.use("/admin", adminRouter);

// –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –∫–æ—à–∏–∫—ñ–≤ —â–æ–≥–æ–¥–∏–Ω–∏
cron.schedule("0 * * * *", async () => {
  try {
    const twentyFourHoursAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);
    await db
      .delete(orders)
      .where(
        and(
          eq(orders.orderStatusId, 1),
          lt(orders.lastUpdated, twentyFourHoursAgo)
        )
      );
    console.log("–°—Ç–∞—Ä—ñ –∫–æ—à–∏–∫–∏ –æ—á–∏—â–µ–Ω–æ");
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –∫–æ—à–∏–∫—ñ–≤:", error);
  }
});

// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
app.use((err, req, res, next) => {
  console.error(err);
  res.status(err.status || 500).json({
    error: err.message || "–°—Ç–∞–ª–∞—Å—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
  });
});

// –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è Vercel
export default app;
